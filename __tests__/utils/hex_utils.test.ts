import fs from "fs";
import path from "path";

import {
  getPathFromFile,
} from "../../src/utils/hex_utils";



// Helper function to create a test binary file
function createTestFile(data: number[], filePath: string) {
  fs.writeFileSync(filePath, Buffer.from(data));
}

// Test suite for hexUtils.ts
describe("hexUtils", () => {
  const testFilePath = path.join(process.cwd(), "__tests__", "test.bin");
  const testData = [
    0x40, 0xb1, 0x8b, 0x81, 0x23, 0xbc, 0x00, 0x14, 0x1a, 0x25, 0x96, 0xe7,
    0xa3, 0x93, 0xbe, 0x1e, 0x00, 0x2f, 0x55, 0x52, 0x49, 0x2f, 0x2f, 0x66,
    0x69, 0x6c, 0x65, 0x3a, 0x2f, 0x43, 0x3a, 0x2f, 0x47, 0x69, 0x74, 0x68,
    0x75, 0x62, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2d, 0x75, 0x74, 0x69,
    0x6c, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2d, 0x75, 0x74, 0x69, 0x6c,
    0x2d, 0x64, 0x65, 0x6d, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x58, 0xfb, 0xf3, 0x23,
    0xbc, 0x00, 0x14, 0x1a, 0x51, 0xf3, 0x8c, 0x7b, 0xbb, 0x77, 0xc6,
  ]; // Example data

  beforeAll(() => {
    createTestFile(testData, testFilePath);
  });

  afterAll(() => {
    fs.unlinkSync(testFilePath);
  });

  it("should extract path from the file", () => {
    const extractedPath = getPathFromFile(testFilePath);
    const expectedPath = "URI//file:/C:/Github/chain-util/chain-util-demo";

    expect(extractedPath).toBe(expectedPath);
  });
});